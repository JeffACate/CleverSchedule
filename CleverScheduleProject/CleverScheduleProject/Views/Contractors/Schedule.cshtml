@model List<CleverScheduleProject.Models.Appointment>

@{
    ViewData["Title"] = "Schedule";
}

<h1>Schedule</h1>
@*<div>
        <iframe width="43vh" height="100vw" frameborder="0" src="https://www.bing.com/maps/embed?h=400&w=500&cp=39.654266777324054~-84.23492090704333&lvl=11&typ=d&sty=r&src=SHELL&FORM=MBEDV8" scrolling="no">
        </iframe>
        <div style="white-space: nowrap; text-align: center; width: 500px; padding: 6px 0;"hidden>
            <a id="largeMapLink" target="_blank" href="https://www.bing.com/maps?cp=39.654266777324054~-84.23492090704333&amp;sty=r&amp;lvl=11&amp;FORM=MBEDLD">View Larger Map</a> &nbsp; | &nbsp;
            <a id="dirMapLink" target="_blank" href="https://www.bing.com/maps/directions?cp=39.654266777324054~-84.23492090704333&amp;sty=r&amp;lvl=11&amp;rtp=~pos.39.654266777324054_-84.23492090704333____&amp;FORM=MBEDLD">Get Directions</a>
        </div>
    </div>*@
<div class="container">
    <div class="row d-flex justify-content-center">
        <div id='printoutPanel'></div>

        <div id='myMap' style="height: 43vh; width:100vw;" class="mb-2"></div>
    </div>
</div>
<script type='text/javascript'>
    function GetMap() {
        var map = new Microsoft.Maps.Map('#myMap', {
            credentials: javaScriptKey,
            center: new Microsoft.Maps.Location(43.408771514892578, -88.1811294555664),
            zoom: 8
        });

        var count = 0;
        
        console.log(appointmentsToPost.length);
        console.log(appointmentsToPost);
        if(@Model.Count > 1) {
            var startLocation = new Microsoft.Maps.Location(@Model[0].Contractor.Address.Lat,@Model[0].Contractor.Address.Lon);
            var pin = new Microsoft.Maps.Pushpin(startLocation);
            
            //Create custom Pushpin
            count++;
            
            //Add the pushpin to the map
            map.entities.push(pin);

            for (var i = 0; i < appointmentsToPost.length; i++) {
                var loc = new Microsoft.Maps.Location(appointmentsToPost[i][0], appointmentsToPost[i][1]);
                var pin = new Microsoft.Maps.Pushpin(loc, {
                    title: 'Client: ' + count.toString(),
                    text: count.toString()
                });
                count++;
                map.entities.push(pin);
            }
        }else {
            var startLocation = map.getCenter();
            var pin = new Microsoft.Maps.Pushpin(startLocation);

            //Create custom Pushpin
            count++;
            
            //Add the pushpin to the map
            map.entities.push(pin);
        }
    }
</script>
<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer></script>
<table class="table text-center table-secondary table-striped table-hover border border-light text-center">
    <thead class="bg-dark text-white">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].DateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Client)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Contractor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Status)
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @for (int i = 1; i < Model.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].DateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Client.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Contractor.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Status)
                    </td>
                    @*<td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>*@
                </tr>
            }
        }
    </tbody>
</table>